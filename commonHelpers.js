import{a as L,S as v,i as c}from"./assets/vendor-b11e2a50.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const p of o.addedNodes)p.tagName==="LINK"&&p.rel==="modulepreload"&&n(p)}).observe(document,{childList:!0,subtree:!0});function s(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function n(e){if(e.ep)return;e.ep=!0;const o=s(e);fetch(e.href,o)}})();const b="https://pixabay.com/api/";async function g(r){try{return(await L.get(b,r)).data}catch(t){throw t}}function f(r){const t=document.querySelector(".gallery"),s=r.map(e=>`<li class="item-ul">
  <a href="${e.largeImageURL}"><img src="${e.webformatURL}" alt="${e.tags}" /></a>
  <div class="about-img-div">
    <p class="description-img">Likes</p>
    <p class="description-img">Views</p>
    <p class="description-img">Comments</p>
    <p class="description-img">Downloads</p>
    <span class="description-value">${e.likes}</span>
    <span class="description-value">${e.views}</span>
    <span class="description-value">${e.comments}</span>
    <span class="description-value">${e.downloads}</span>
  </div>
</li>`).join("");t.insertAdjacentHTML("beforeend",s),new v(".gallery li a",{captions:!0,captionsData:"alt",captionPosition:"bottom",captionDelay:250}).refresh()}const u=document.querySelector(".form"),i=document.querySelector(".loader"),w=document.querySelector(".gallery"),a=document.querySelector(".load-more-button"),h="45071357-999033ebbf151b40dc2c05ece";let d=1,l="",y=0,m=0;u.addEventListener("submit",q);a.addEventListener("click",S);async function q(r){if(r.preventDefault(),l=u.elements.input.value.trim(),d=1,w.innerHTML="",l===""||l.length<2){c.error({title:"",message:"The input field is empty or has less than two characters!"}),a.style.display="none";return}i.classList.remove("hidden");const t={params:{key:h,q:l,image_type:"photo",orientation:"horizontal",page:d,per_page:15}};try{const s=await g(t);i.classList.add("hidden"),s.hits.length===0?(c.error({title:"",message:"No pictures found! Try again!"}),a.style.display="none"):(f(s.hits),a.classList.remove("hidden"),y=s.totalHits,m=Math.ceil(y/15),m>1?a.style.display="block":a.style.display="none")}catch(s){i.classList.add("hidden"),c.error({title:"",message:`Error fetching images: ${s.message||s}`})}finally{u.reset()}}async function S(){i.classList.remove("hidden"),d+=1;const r={params:{key:h,q:l,image_type:"photo",orientation:"horizontal",page:d,per_page:15}};try{const t=await g(r);i.classList.add("hidden"),f(t.hits);const n=document.querySelector(".gallery li").getBoundingClientRect();window.scrollBy({top:n.height*2,behavior:"smooth"})}catch(t){i.classList.add("hidden"),c.error({title:"",message:`Error fetching images: ${t.message||t}`})}finally{d>=m&&(a.style.display="none",c.info({title:"",message:"We're sorry, but you've reached the end of search results."}))}}
//# sourceMappingURL=commonHelpers.js.map
